# Step 2: Format the gt table
df_top10_speed %>%
gt() %>%
tab_header(
title = "Top 10 Segments with Highest Speed Spread",
subtitle = "Flag shows if segment is in downtown Toronto (based on lat/lon)"
) %>%
fmt_number(
columns = c(speed_spread), decimals = 1
) %>%
fmt_number(
columns = c(avg_daily_vol), sep_mark = ",", decimals = 0
) %>%
data_color(
columns = c(speed_spread),
colors = col_numeric(
palette = c("white", "orange", "red"),
domain = c(0, max(df_top10_speed$speed_spread, na.rm = TRUE))
)
) %>%
data_color(
columns = c(avg_daily_vol),
colors = col_numeric(
palette = c("lightblue", "blue"),
domain = c(min(df_top10_speed$avg_daily_vol), max(df_top10_speed$avg_daily_vol))
)
) %>%
cols_label(
location_name = "Road Segment",
speed_spread = "Speed Spread (%)",
avg_daily_vol = "Avg Daily Volume",
Flag = "Is Downtown?"
) %>%
tab_style(
style = list(
cell_fill(color = "lightgreen"),
cell_text(weight = "bold", color = "darkgreen")
),
locations = cells_body(
columns = c(Flag),
rows = Flag == "Downtown"
)
) %>%
tab_source_note(
source_note = "Source: City of Toronto Open Data"
)
# transforming data:
# add "speed spread" feature
df_filtered <- traffic_data %>%
mutate(speed_spread = (avg_95th_percentile_speed - avg_speed) * 100 / avg_speed) %>%
# filter for road segments with average speed < 90km/h to analyze urban road segments only
filter(!is.na(avg_daily_vol), !is.na(avg_speed), !is.na(speed_spread), avg_speed < 90)
# plot: daily volume vs average speed, with color scale = speed spread
ggplot(df_filtered, aes(x = avg_daily_vol, y = avg_speed)) +
stat_summary_hex(aes(z = speed_spread), bins = 30, fun = mean) +
scale_fill_viridis_c(option = "magma", name = "Speed Spread (%)") +
labs(
title = "Speed Spread by Traffic Volume and Speed (Urban Roads)",
subtitle = "Filtered to locations with avg speed < 90 km/h;",
x = "Average Daily Volume (vehicles/day)",
y = "Average Speed (km/h)"
) +
theme_minimal(base_size = 13)
library(ggplot2)
library(dplyr)
library(sf)
library(osmdata)
# bounding box coordinates for downtown Toronto
xmin <- -79.42
xmax <- -79.36
ymin <- 43.630
ymax <- 43.675
# setting up underlying map of Toronto using osmdata
osm_bb <- c(left = xmin, bottom = ymin, right = xmax, top = ymax)
streets <- opq(bbox = osm_bb) %>%
add_osm_feature(key = "highway", value = c("motorway", "primary", "secondary", "tertiary")) %>%
osmdata_sf()
# data manipulation: filter for traffic data for downtown + volume ≥ 10,000
traffic_sf <- traffic_data %>%
filter(
!is.na(latitude), !is.na(longitude), !is.na(avg_daily_vol),
longitude >= xmin, longitude <= xmax,
latitude  >= ymin, latitude  <= ymax,
avg_daily_vol >= 10000
) %>%
st_as_sf(coords = c("longitude", "latitude"), crs = 4326)
# overlay color-scaled points on to osm map
ggplot() +
geom_sf(data = streets$osm_lines, color = "gray60", size = 0.2, alpha = 0.5) +
geom_sf(data = traffic_sf, aes(color = avg_daily_vol), size = 1.2, alpha = 0.8) +
scale_color_gradient(name = "Avg Daily Volume", low = "gold", high = "red") +
labs(
title = "Toronto Traffic Volume (Downtown, High Volume)",
subtitle = "Filtered to volume ≥ 10,000",
x = "Longitude", y = "Latitude"
) +
coord_sf(xlim = c(xmin, xmax), ylim = c(ymin, ymax)) +
theme_minimal() +
theme(
panel.grid.major = element_line(color = "gray90", size = 0.1),
axis.text.x = element_text(angle = 45, hjust = 1, size = 7),
axis.text.y = element_text(size = 8)
)
library(opendatatoronto)
library(ggplot2)
library(dplyr)
library(tidyr)
library(scales)
packages <- search_packages("Traffic Volumes - Midblock Vehicle Speed, Volume and Classification Counts")
package_id <- packages$id[1]
resources <- list_package_resources(package_id)
traffic_data <- get_resource(resources[3,'id'])
# ========= OPTION 1: Analysis of Road Characteristics vs. Driving Behaviour ===========
# transforming data:
# add "speed spread" feature
df_filtered <- traffic_data %>%
mutate(speed_spread = (avg_95th_percentile_speed - avg_speed) * 100 / avg_speed) %>%
# filter for road segments with average speed < 90km/h to analyze urban road segments only
filter(!is.na(avg_daily_vol), !is.na(avg_speed), !is.na(speed_spread), avg_speed < 90)
# plot: daily volume vs average speed, with color scale = speed spread
ggplot(df_filtered, aes(x = avg_daily_vol, y = avg_speed)) +
stat_summary_hex(aes(z = speed_spread), bins = 30, fun = mean) +
scale_fill_viridis_c(option = "magma", name = "Speed Spread (%)") +
labs(
title = "Speed Spread by Traffic Volume and Speed (Urban Roads)",
subtitle = "Filtered to locations with avg speed < 90 km/h;",
x = "Average Daily Volume (vehicles/day)",
y = "Average Speed (km/h)"
) +
theme_minimal(base_size = 13)
# ========= OPTION 2: Geographical View of High-Volume Traffic Segments in Downtown Toronto ===========
library(sf)
library(osmdata)
# bounding box coordinates for downtown Toronto
xmin <- -79.42
xmax <- -79.36
ymin <- 43.630
ymax <- 43.675
# setting up underlying map of Toronto using osmdata
osm_bb <- c(left = xmin, bottom = ymin, right = xmax, top = ymax)
streets <- opq(bbox = osm_bb) %>%
add_osm_feature(key = "highway", value = c("motorway", "primary", "secondary", "tertiary")) %>%
osmdata_sf()
# data manipulation: filter for traffic data for downtown + volume ≥ 10,000
traffic_sf <- traffic_data %>%
filter(
!is.na(latitude), !is.na(longitude), !is.na(avg_daily_vol),
longitude >= xmin, longitude <= xmax,
latitude  >= ymin, latitude  <= ymax,
avg_daily_vol >= 10000
) %>%
st_as_sf(coords = c("longitude", "latitude"), crs = 4326)
# overlay color-scaled points on to osm map
ggplot() +
geom_sf(data = streets$osm_lines, color = "gray60", size = 0.2, alpha = 0.5) +
geom_sf(data = traffic_sf, aes(color = avg_daily_vol), size = 1.2, alpha = 0.8) +
scale_color_gradient(name = "Avg Daily Volume", low = "gold", high = "red") +
labs(
title = "Toronto Traffic Volume (Downtown, High Volume)",
subtitle = "Filtered to volume ≥ 10,000",
x = "Longitude", y = "Latitude"
) +
coord_sf(xlim = c(xmin, xmax), ylim = c(ymin, ymax)) +
theme_minimal() +
theme(
panel.grid.major = element_line(color = "gray90", size = 0.1),
axis.text.x = element_text(angle = 45, hjust = 1, size = 7),
axis.text.y = element_text(size = 8)
)
# ========= OPTION 3: Traffic Volume Differences Between Weekdays and Weekends ===========
# filter out observations without weekday or weekend counts
df_wdy_wknd <- traffic_data %>%
filter(
!is.na(avg_weekday_daily_vol),
!is.na(avg_weekend_daily_vol)
)
# long format for plot
df_long <- df_wdy_wknd %>%
select(centreline_id, avg_weekday_daily_vol, avg_weekend_daily_vol) %>%
filter(
avg_weekday_daily_vol <= 40000,
avg_weekend_daily_vol <= 40000
) %>%
pivot_longer(
cols = c(avg_weekday_daily_vol, avg_weekend_daily_vol),
names_to = "day_type",
values_to = "volume"
) %>%
mutate(
day_type = recode(day_type,
avg_weekday_daily_vol = "Weekday",
avg_weekend_daily_vol = "Weekend"),
day_type = factor(day_type, levels = c("Weekday", "Weekend"))
)
# side-by-side violin plot
ggplot(df_long, aes(x = day_type, y = volume, fill = day_type)) +
geom_violin(trim = TRUE, alpha = 0.7) +
stat_summary(fun = median, geom = "point", shape = 21, fill = "white", size = 3) +
coord_cartesian(ylim = c(0, 40000)) +
scale_fill_manual(values = c("skyblue", "tomato")) +
labs(
title = "Distribution of Average Daily Volume: Weekday vs Weekend",
subtitle = "Violin plot with media shown as white dot",
x = NULL,
y = "Average Daily Volume"
) +
theme_minimal(base_size = 10) +
theme(legend.position = "none")
# ========= OPTION 5: Top 10 Segments by Speed Spread ==========
library(gt)
# downtown boundary box
downtown_bb <- list(
lon_min = -79.42,
lon_max = -79.36,
lat_min = 43.63,
lat_max = 43.675
)
# df with downtown condition column
df_top10_speed <- traffic_data %>%
filter(
!is.na(location_name),
!is.na(avg_daily_vol),
!is.na(avg_speed),
!is.na(avg_95th_percentile_speed),
!is.na(latitude), !is.na(longitude),
avg_speed > 0
) %>%
mutate(
speed_spread = (avg_95th_percentile_speed - avg_speed) * 100 / avg_speed,
Flag = ifelse(
latitude >= downtown_bb$lat_min & latitude <= downtown_bb$lat_max &
longitude >= downtown_bb$lon_min & longitude <= downtown_bb$lon_max,
"Downtown", "Non-Downtown"
)
) %>%
select(location_name, speed_spread, avg_daily_vol, Flag) %>%
arrange(desc(speed_spread)) %>%
slice(1:10)
# gt table format
df_top10_speed %>%
gt() %>%
tab_header(
title = "Top 10 Segments with Highest Speed Spread",
subtitle = "Downtown or Non-downtown: conditioned on coordinates "
) %>%
fmt_number(
columns = c(speed_spread), decimals = 1
) %>%
fmt_number(
columns = c(avg_daily_vol), sep_mark = ",", decimals = 0
) %>%
data_color(
columns = c(speed_spread),
colors = col_numeric(
palette = c("white", "orange", "red"),
domain = c(0, max(df_top10_speed$speed_spread, na.rm = TRUE))
)
) %>%
data_color(
columns = c(avg_daily_vol),
colors = col_numeric(
palette = c("lightblue", "blue"),
domain = c(min(df_top10_speed$avg_daily_vol), max(df_top10_speed$avg_daily_vol))
)
) %>%
cols_label(
location_name = "Road Segment",
speed_spread = "Speed Spread (%)",
avg_daily_vol = "Avg Daily Volume",
flag = "Downtown"
) %>%
tab_style(
style = list(
cell_fill(color = "lightgreen"),
cell_text(weight = "bold", color = "darkgreen")
),
locations = cells_body(
columns = c(flag),
rows = flag == "Downtown"
)
)
library(opendatatoronto)
library(ggplot2)
library(dplyr)
library(tidyr)
library(scales)
packages <- search_packages("Traffic Volumes - Midblock Vehicle Speed, Volume and Classification Counts")
package_id <- packages$id[1]
resources <- list_package_resources(package_id)
traffic_data <- get_resource(resources[3,'id'])
# ========= OPTION 1: Analysis of Road Characteristics vs. Driving Behaviour ===========
# transforming data:
# add "speed spread" feature
df_filtered <- traffic_data %>%
mutate(speed_spread = (avg_95th_percentile_speed - avg_speed) * 100 / avg_speed) %>%
# filter for road segments with average speed < 90km/h to analyze urban road segments only
filter(!is.na(avg_daily_vol), !is.na(avg_speed), !is.na(speed_spread), avg_speed < 90)
# plot: daily volume vs average speed, with color scale = speed spread
ggplot(df_filtered, aes(x = avg_daily_vol, y = avg_speed)) +
stat_summary_hex(aes(z = speed_spread), bins = 30, fun = mean) +
scale_fill_viridis_c(option = "magma", name = "Speed Spread (%)") +
labs(
title = "Speed Spread by Traffic Volume and Speed (Urban Roads)",
subtitle = "Filtered to locations with avg speed < 90 km/h;",
x = "Average Daily Volume (vehicles/day)",
y = "Average Speed (km/h)"
) +
theme_minimal(base_size = 13)
# ========= OPTION 2: Geographical View of High-Volume Traffic Segments in Downtown Toronto ===========
library(sf)
library(osmdata)
# bounding box coordinates for downtown Toronto
xmin <- -79.42
xmax <- -79.36
ymin <- 43.630
ymax <- 43.675
# setting up underlying map of Toronto using osmdata
osm_bb <- c(left = xmin, bottom = ymin, right = xmax, top = ymax)
streets <- opq(bbox = osm_bb) %>%
add_osm_feature(key = "highway", value = c("motorway", "primary", "secondary", "tertiary")) %>%
osmdata_sf()
# data manipulation: filter for traffic data for downtown + volume ≥ 10,000
traffic_sf <- traffic_data %>%
filter(
!is.na(latitude), !is.na(longitude), !is.na(avg_daily_vol),
longitude >= xmin, longitude <= xmax,
latitude  >= ymin, latitude  <= ymax,
avg_daily_vol >= 10000
) %>%
st_as_sf(coords = c("longitude", "latitude"), crs = 4326)
# overlay color-scaled points on to osm map
ggplot() +
geom_sf(data = streets$osm_lines, color = "gray60", size = 0.2, alpha = 0.5) +
geom_sf(data = traffic_sf, aes(color = avg_daily_vol), size = 1.2, alpha = 0.8) +
scale_color_gradient(name = "Avg Daily Volume", low = "gold", high = "red") +
labs(
title = "Toronto Traffic Volume (Downtown, High Volume)",
subtitle = "Filtered to volume ≥ 10,000",
x = "Longitude", y = "Latitude"
) +
coord_sf(xlim = c(xmin, xmax), ylim = c(ymin, ymax)) +
theme_minimal() +
theme(
panel.grid.major = element_line(color = "gray90", size = 0.1),
axis.text.x = element_text(angle = 45, hjust = 1, size = 7),
axis.text.y = element_text(size = 8)
)
# ========= OPTION 3: Traffic Volume Differences Between Weekdays and Weekends ===========
# filter out observations without weekday or weekend counts
df_wdy_wknd <- traffic_data %>%
filter(
!is.na(avg_weekday_daily_vol),
!is.na(avg_weekend_daily_vol)
)
# long format for plot
df_long <- df_wdy_wknd %>%
select(centreline_id, avg_weekday_daily_vol, avg_weekend_daily_vol) %>%
filter(
avg_weekday_daily_vol <= 40000,
avg_weekend_daily_vol <= 40000
) %>%
pivot_longer(
cols = c(avg_weekday_daily_vol, avg_weekend_daily_vol),
names_to = "day_type",
values_to = "volume"
) %>%
mutate(
day_type = recode(day_type,
avg_weekday_daily_vol = "Weekday",
avg_weekend_daily_vol = "Weekend"),
day_type = factor(day_type, levels = c("Weekday", "Weekend"))
)
# side-by-side violin plot
ggplot(df_long, aes(x = day_type, y = volume, fill = day_type)) +
geom_violin(trim = TRUE, alpha = 0.7) +
stat_summary(fun = median, geom = "point", shape = 21, fill = "white", size = 3) +
coord_cartesian(ylim = c(0, 40000)) +
scale_fill_manual(values = c("skyblue", "tomato")) +
labs(
title = "Distribution of Average Daily Volume: Weekday vs Weekend",
subtitle = "Violin plot with media shown as white dot",
x = NULL,
y = "Average Daily Volume"
) +
theme_minimal(base_size = 10) +
theme(legend.position = "none")
# ========= OPTION 5: Top 10 Segments by Speed Spread ==========
library(gt)
# downtown boundary box
downtown_bb <- list(
lon_min = -79.42,
lon_max = -79.36,
lat_min = 43.63,
lat_max = 43.675
)
# df with downtown condition column
df_top10_speed <- traffic_data %>%
filter(
!is.na(location_name),
!is.na(avg_daily_vol),
!is.na(avg_speed),
!is.na(avg_95th_percentile_speed),
!is.na(latitude), !is.na(longitude),
avg_speed > 0
) %>%
mutate(
speed_spread = (avg_95th_percentile_speed - avg_speed) * 100 / avg_speed,
flag = ifelse(
latitude >= downtown_bb$lat_min & latitude <= downtown_bb$lat_max &
longitude >= downtown_bb$lon_min & longitude <= downtown_bb$lon_max,
"Downtown", "Non-Downtown"
)
) %>%
select(location_name, speed_spread, avg_daily_vol, flag) %>%
arrange(desc(speed_spread)) %>%
slice(1:10)
# gt table format
df_top10_speed %>%
gt() %>%
tab_header(
title = "Top 10 Segments with Highest Speed Spread",
subtitle = "Downtown or Non-downtown: conditioned on coordinates "
) %>%
fmt_number(
columns = c(speed_spread), decimals = 1
) %>%
fmt_number(
columns = c(avg_daily_vol), sep_mark = ",", decimals = 0
) %>%
data_color(
columns = c(speed_spread),
colors = col_numeric(
palette = c("white", "orange", "red"),
domain = c(0, max(df_top10_speed$speed_spread, na.rm = TRUE))
)
) %>%
data_color(
columns = c(avg_daily_vol),
colors = col_numeric(
palette = c("lightblue", "blue"),
domain = c(min(df_top10_speed$avg_daily_vol), max(df_top10_speed$avg_daily_vol))
)
) %>%
cols_label(
location_name = "Road Segment",
speed_spread = "Speed Spread (%)",
avg_daily_vol = "Avg Daily Volume",
flag = "Downtown"
) %>%
tab_style(
style = list(
cell_fill(color = "lightgreen"),
cell_text(weight = "bold", color = "darkgreen")
),
locations = cells_body(
columns = c(flag),
rows = flag == "Downtown"
)
)
shiny::runApp('final_proj')
install.packages('rsconnect')
rsconnect::setAccountInfo(name='xry4k2-jason-lee',
token='DF7C64A7E5EE1D5CC23DF4F77EDB3738',
secret='<SECRET>')
rsconnect::setAccountInfo(name='xry4k2-jason-lee',
token='DF7C64A7E5EE1D5CC23DF4F77EDB3738',
secret='<SECRET>')
shiny::runApp('final_proj')
install.packages("leaflet")
runApp('final_proj')
runApp('final_proj')
runApp('final_proj')
runApp('final_proj')
runApp('final_proj')
runApp('final_proj')
rsconnect::setAccountInfo(name='xry4k2-jason-lee', token='DF7C64A7E5EE1D5CC23DF4F77EDB3738', secret='PRCjdwygUAS/6cFAohOwBUvdBRDnuzhkOY61B+ev')
rsconnect::deployApp('~/Code/Stat442/Final/app.R')
rsconnect::deployApp('Home/Code/STAT 442/Final/app.R')
rsconnect::deployApp('~/Code/STAT 442/Final/app.R')
rsconnect::deployApp('~/Code/STAT 442/Final/app.R')
library(dplyr)
library(gt)
library(scales)
downtown_bb <- list(lon_min = -79.42, lon_max = -79.36, lat_min = 43.63, lat_max = 43.675)
df_top10_speed <- traffic_data %>%
filter(!is.na(location_name), !is.na(avg_daily_vol), !is.na(avg_speed),
!is.na(avg_95th_percentile_speed), !is.na(latitude), !is.na(longitude), avg_speed > 0) %>%
mutate(speed_spread = (avg_95th_percentile_speed - avg_speed) * 100 / avg_speed,
flag = ifelse(latitude >= downtown_bb$lat_min & latitude <= downtown_bb$lat_max &
longitude >= downtown_bb$lon_min & longitude <= downtown_bb$lon_max,
"Downtown", "Non-Downtown")) %>%
select(location_name, speed_spread, avg_daily_vol, flag) %>%
arrange(desc(speed_spread)) %>%
slice(1:10)
df_top10_speed %>%
gt() %>%
tab_header(
title = "Top 10 Segments with Highest Speed Spread",
subtitle = "Downtown or Non-downtown: conditioned on coordinates "
) %>%
fmt_number(columns = c(speed_spread), decimals = 1) %>%
fmt_number(columns = c(avg_daily_vol), sep_mark = ",", decimals = 0) %>%
data_color(columns = c(speed_spread), colors = col_numeric(palette = c("orange", "red"), domain = NULL)) %>%
data_color(columns = c(avg_daily_vol), colors = col_numeric(palette = c("lightblue", "blue"), domain = NULL)) %>%
cols_label(location_name = "Road Segment", speed_spread = "Speed Spread (%)", avg_daily_vol = "Avg Daily Volume", flag = "Downtown") %>%
tab_style(style = list(cell_fill(color = "lightgreen"), cell_text(weight = "bold", color = "darkgreen")),
locations = cells_body(columns = c(flag), rows = flag == "Downtown"))
runApp()
runApp()
rsconnect::deployApp('~/Code/STAT 442/Final')
rsconnect::deployApp('~/Code/STAT 442/Final')
rsconnect::deployApp('~/Code/STAT 442/Final/ShinyApp')
